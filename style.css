/* Import Google Fonts for better typography */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

/* CSS Reset and Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  /* Color System */
  --primary-50: #f0f9ff;
  --primary-100: #e0f2fe;
  --primary-200: #bae6fd;
  --primary-300: #7dd3fc;
  --primary-400: #38bdf8;
  --primary-500: #0ea5e9;
  --primary-600: #0284c7;
  --primary-700: #0369a1;
  --primary-800: #075985;
  --primary-900: #0c4a6e;

  --neutral-50: #fafafa;
  --neutral-100: #f5f5f5;
  --neutral-200: #e5e5e5;
  --neutral-300: #d4d4d4;
  --neutral-400: #a3a3a3;
  --neutral-500: #737373;
  --neutral-600: #525252;
  --neutral-700: #404040;
  --neutral-800: #262626;
  --neutral-900: #171717;

  --success-500: #10b981;
  --error-500: #ef4444;
  --warning-500: #f59e0b;

  /* Spacing System (8px base) */
  --space-1: 0.25rem;
  --space-2: 0.5rem;
  --space-3: 0.75rem;
  --space-4: 1rem;
  --space-5: 1.25rem;
  --space-6: 1.5rem;
  --space-8: 2rem;
  --space-10: 2.5rem;
  --space-12: 3rem;
  --space-16: 4rem;
  --space-20: 5rem;

  /* Typography */
  --font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-size-xs: 0.75rem;
  --font-size-sm: 0.875rem;
  --font-size-base: 1rem;
  --font-size-lg: 1.125rem;
  --font-size-xl: 1.25rem;
  --font-size-2xl: 1.5rem;
  --font-size-3xl: 1.875rem;
  --font-size-4xl: 2.25rem;

  /* Border Radius */
  --radius-sm: 0.375rem;
  --radius-md: 0.5rem;
  --radius-lg: 0.75rem;
  --radius-xl: 1rem;
  --radius-2xl: 1.5rem;
  --radius-full: 9999px;

  /* Shadows */
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);

  /* Transitions */
  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-normal: 250ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);
}

body {
  font-family: var(--font-family);
  background: linear-gradient(135deg, var(--neutral-900) 0%, var(--neutral-800) 100%);
  color: var(--neutral-100);
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-4);
  line-height: 1.6;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.container {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--radius-2xl);
  padding: var(--space-8);
  width: 100%;
  max-width: 600px;
  box-shadow: var(--shadow-2xl);
  position: relative;
  overflow: hidden;
}

.container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
}

.container h1 {
  font-size: var(--font-size-3xl);
  font-weight: 700;
  text-align: center;
  margin-bottom: var(--space-8);
  background: linear-gradient(135deg, var(--primary-400), var(--primary-600));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  letter-spacing: -0.025em;
}

.input-group {
  display: flex;
  gap: var(--space-3);
  margin-bottom: var(--space-8);
  align-items: stretch;
}

.task {
  flex: 1;
  font-size: var(--font-size-lg);
  padding: var(--space-4) var(--space-5);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--radius-full);
  background: rgba(255, 255, 255, 0.05);
  color: var(--neutral-100);
  font-family: inherit;
  transition: all var(--transition-normal);
  outline: none;
  backdrop-filter: blur(10px);
}

.task::placeholder {
  color: var(--neutral-400);
  font-weight: 400;
}

.task:focus {
  border-color: var(--primary-500);
  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);
  background: rgba(255, 255, 255, 0.08);
  transform: translateY(-1px);
}

.addTask {
  background: linear-gradient(135deg, var(--primary-600), var(--primary-700));
  color: white;
  border: none;
  border-radius: var(--radius-full);
  padding: var(--space-4) var(--space-6);
  font-size: var(--font-size-lg);
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-normal);
  position: relative;
  overflow: hidden;
  min-width: 120px;
  font-family: inherit;
}

.addTask::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left var(--transition-slow);
}

.addTask:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg), 0 0 20px rgba(14, 165, 233, 0.3);
  background: linear-gradient(135deg, var(--primary-500), var(--primary-600));
}

.addTask:hover::before {
  left: 100%;
}

.addTask:active {
  transform: translateY(0);
  box-shadow: var(--shadow-md);
}

#taskList {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
}

#taskList li {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--radius-xl);
  padding: var(--space-4) var(--space-5);
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: var(--font-size-lg);
  transition: all var(--transition-normal);
  backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

#taskList li::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 4px;
  background: linear-gradient(135deg, var(--primary-500), var(--primary-600));
  transform: scaleY(0);
  transition: transform var(--transition-normal);
}

#taskList li:hover {
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.2);
  transform: translateX(4px);
}

#taskList li:hover::before {
  transform: scaleY(1);
}

.task-text {
  flex: 1;
  margin-right: var(--space-4);
  font-weight: 500;
  color: var(--neutral-100);
}

.deleteTask {
  background: none;
  border: none;
  color: var(--neutral-400);
  font-size: var(--font-size-xl);
  cursor: pointer;
  padding: var(--space-2);
  border-radius: var(--radius-md);
  transition: all var(--transition-fast);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
}

.deleteTask:hover {
  color: var(--error-500);
  background: rgba(239, 68, 68, 0.1);
  transform: scale(1.1);
}

.deleteTask:active {
  transform: scale(0.95);
}

/* Empty state styling */
.empty-state {
  text-align: center;
  padding: var(--space-12) var(--space-4);
  color: var(--neutral-400);
}

.empty-state-icon {
  font-size: var(--font-size-4xl);
  margin-bottom: var(--space-4);
  opacity: 0.5;
}

.empty-state-text {
  font-size: var(--font-size-lg);
  font-weight: 500;
  margin-bottom: var(--space-2);
}

.empty-state-subtext {
  font-size: var(--font-size-sm);
  color: var(--neutral-500);
}

/* Animation for new tasks */
@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.task-item-enter {
  animation: slideInUp var(--transition-normal) ease-out;
}

/* Animation for task removal */
@keyframes slideOutRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(100px);
  }
}

.task-item-exit {
  animation: slideOutRight var(--transition-normal) ease-in;
}

/* Responsive Design */
@media (max-width: 640px) {
  body {
    padding: var(--space-2);
  }
  
  .container {
    padding: var(--space-6);
    border-radius: var(--radius-xl);
  }
  
  .container h1 {
    font-size: var(--font-size-2xl);
    margin-bottom: var(--space-6);
  }
  
  .input-group {
    flex-direction: column;
    gap: var(--space-4);
  }
  
  .task,
  .addTask {
    font-size: var(--font-size-base);
  }
  
  .addTask {
    min-width: auto;
  }
  
  #taskList li {
    font-size: var(--font-size-base);
    padding: var(--space-3) var(--space-4);
  }
}

@media (max-width: 480px) {
  .container {
    padding: var(--space-4);
  }
  
  .container h1 {
    font-size: var(--font-size-xl);
  }
  
  .task,
  .addTask {
    padding: var(--space-3) var(--space-4);
  }
}

/* Focus visible for accessibility */
.task:focus-visible,
.addTask:focus-visible,
.deleteTask:focus-visible {
  outline: 2px solid var(--primary-500);
  outline-offset: 2px;
}

/* Reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .container {
    border: 2px solid var(--neutral-100);
  }
  
  .task,
  #taskList li {
    border: 1px solid var(--neutral-300);
  }
}

/* Print styles */
@media print {
  body {
    background: white;
    color: black;
  }
  
  .container {
    background: white;
    border: 1px solid black;
    box-shadow: none;
  }
  
  .addTask,
  .deleteTask {
    display: none;
  }
}